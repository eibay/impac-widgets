<div ng-app="maestrano">
  <div ng-controller="MainController" class="container"><br/>

    <div class="btn-group pull-right">
      <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <span class="glyphicon glyphicon-plus"></span> Add widget <span class="caret"></span>
      </button>
      <ul class="dropdown-menu">
        <li><a href ng-click='addWidget(0)'>"Employees location" widget</a></li>
        <li role="separator" class="divider"></li>
        <li><a href ng-click='addWidget(1)'>"Sales flow" widget</a></li>
      </ul>
    </div>

    <header>
      <h1 class="text-center page-header">Maestrano Widgets</h1>
    </header>

    <div class="row">

      <div class="col-md-5 col-md-offset-1" ng-repeat="widget in widgets">
        <div ng-class="{'panel panel-info' : $even, 'panel panel-success' : $odd}">
          <div class="panel-heading">
            <h3 class="panel-title" ng-hide="widget.name">Widget #{{$index + 1}}</h3>
            <h3 class="panel-title" ng-show="widget.name">"{{widget.name}}" widget
              <span class="glyphicon glyphicon-remove pull-right" ng-click="closeWidget($index)"></span>
            </h3>
          </div>
          <div style="height: 400px;" class="text-center">
            <a href="" ng-hide="widget.isEnabled" data-toggle="modal" data-target=".bs-example-modal-sm" ng-click="clickedPanel($index)" id="widget1_placeholder">
              <div style="height: 98%; width: 98%; background-color: #EEE; margin: 1%;">
                <div style="padding-top:190px;"><span class="glyphicon glyphicon-plus-sign" aria-hidden="true"></span> click to add widget</div>
              </div>
            </a>
            <div style="height: 350px; width: 450px; padding: 3px;" class="map_region{{$index}}">
              <div id="map{{$index}}" style="height: 100%; width: 100%;background: transparent url(/assets/ajax-loader.gif) no-repeat center center;"></div>
              <div >this is {{widget.name}} widget</div>
            </div>
          </div>
        </div>
      </div>

    </div>

    <!-- modal to select a widget type -->
    <div class="modal fade bs-example-modal-sm" tabindex="-1" role="dialog" aria-labelledby="mySmallModalLabel" id="myModal">
      <div class="modal-dialog modal-sm">
        <div class="modal-content">

          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">x</span></button>
            <h4 class="modal-title" id="mySmallModalLabel">Select your widget type:</h4>
          </div>
          <div class="modal-body">
            <button type="button" class="btn btn-primary btn-lg btn-block" data-dismiss="modal" ng-click='addWidget(0, true)' id="button1">"Employees location" widget</button>
            <button type="button" class="btn btn-warning btn-lg btn-block" data-dismiss="modal" ng-click='addWidget(1, true)'>"Sales flow" widget</button>
          </div>
        </div>
      </div>
    </div>

  </div>
</div>

<script src="http://maps.google.com/maps/api/js?sensor=false" type="text/javascript"></script>
<script>
    var map;
    function initMap(id) {
        map = new google.maps.Map(document.getElementById('map' + id), {
            center: { lat: 10, lng: -160 },
            zoom: 2,
            styles: mapStyle
        });

        map.data.setStyle(styleFeature);
        var script = document.createElement('script');
        script.setAttribute('src', '/cities');
        document.getElementsByTagName('head')[0].appendChild(script);

        var infoWindow = new google.maps.InfoWindow({
            content: "<div>Hello! World</div>",
            maxWidth: 500
        });

        map.data.addListener('click', function(event) {
            infoWindow.setPosition(event.latLng);
            infoWindow.open(map);
            infoWindow.setContent(event.feature.getProperty('title') + ": " + event.feature.getProperty('count') + " employees");
        });
    }

    // Defines the callback function referenced in the jsonp file.
    function eqfeed_callback(data) {
        map.data.addGeoJson(data);
    }

    function styleFeature(feature) {
        var low = [151, 83, 34];   // color of mag 1.0
        var high = [5, 69, 54];  // color of mag 6.0 and above
        var minMag = 1.0;
        var maxMag = 5.0;

        // fraction represents where the value sits between the min and max
        var fraction = (Math.min(feature.getProperty('count'), maxMag) - minMag) / (maxMag - minMag);

        var color = interpolateHsl(low, high, fraction);

        return {
            icon: {
                path: google.maps.SymbolPath.CIRCLE,
                strokeWeight: 5,
                strokeColor: color,
                fillColor: color,
                fillOpacity: 2 / feature.getProperty('count'),
                // while an exponent would technically be correct, quadratic looks nicer
                scale: Math.pow(feature.getProperty('count'), 2)
            },
            zIndex: Math.floor(feature.getProperty('count'))
        };
    }

    function interpolateHsl(lowHsl, highHsl, fraction) {
        var color = [];
        for (var i = 0; i < 3; i++) {
            // Calculate color based on the fraction.
            color[i] = (highHsl[i] - lowHsl[i]) * fraction + lowHsl[i];
        }

        return 'hsl(' + color[0] + ',' + color[1] + '%,' + color[2] + '%)';
    }

    var mapStyle = [{
        'featureType': 'all',
        'elementType': 'all',
        'stylers': [{'visibility': 'off'}]
    }, {
        'featureType': 'landscape',
        'elementType': 'geometry',
        'stylers': [{'visibility': 'on'}, {'color': '#fcfcfc'}]
    }, {
        'featureType': 'water',
        'elementType': 'labels',
        'stylers': [{'visibility': 'off'}]
    }, {
        'featureType': 'water',
        'elementType': 'geometry',
        'stylers': [{'visibility': 'on'}, {'hue': '#5f94ff'}, {'lightness': 60}]
    }];
</script>